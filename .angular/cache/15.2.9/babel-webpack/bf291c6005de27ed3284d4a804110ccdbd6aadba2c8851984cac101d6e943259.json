{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport Swal from \"sweetalert2\";\nimport * as firebaseDatabase from \"@angular/fire/database\";\nimport { faCircleXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { defaultEmployee } from 'src/app/models/employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/database\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@fortawesome/angular-fontawesome\";\nfunction CadastroEmployeesComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.…µ…µgetCurrentView();\n    i0.…µ…µelementStart(0, \"div\", 41)(1, \"fa-icon\", 42);\n    i0.…µ…µlistener(\"click\", function CadastroEmployeesComponent_div_1_Template_fa_icon_click_1_listener() {\n      i0.…µ…µrestoreView(_r2);\n      const ctx_r1 = i0.…µ…µnextContext();\n      return i0.…µ…µresetView(ctx_r1.closeForm());\n    });\n    i0.…µ…µelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.…µ…µnextContext();\n    i0.…µ…µadvance(1);\n    i0.…µ…µpropertyInterpolate(\"title\", ctx_r0.tooltips.fechar);\n    i0.…µ…µproperty(\"icon\", ctx_r0.faClose);\n  }\n}\nexport let CadastroEmployeesComponent = /*#__PURE__*/(() => {\n  var _class;\n  class CadastroEmployeesComponent {\n    constructor(_database) {\n      this._database = _database;\n      this.formCadastro = this.createFormCadastro();\n      this.errors = [];\n      this.employeeToEdit = undefined;\n      this.keyToUpdate = \"\";\n      this.actionToPerform = \"Salvar\";\n      this.closeCadastroForm = new EventEmitter();\n      this.subscriptions = [];\n      this.selectedEmployee = defaultEmployee;\n      this.faClose = faCircleXmark;\n      this.tooltips = {\n        fechar: \"Fechar\"\n      };\n    }\n    ngOnInit() {\n      if (this.employeeToEdit !== undefined) {\n        this.selectedEmployee = this.employeeToEdit;\n        this.actionToPerform = \"Atualizar\";\n        this.formCadastro = this.fillFormCadastro();\n      }\n    }\n    createFormCadastro() {\n      return new FormGroup({\n        'id': new FormControl(\"\"),\n        'nome': new FormControl(\"\", Validators.required),\n        'sobrenome': new FormControl(\"\"),\n        'genero': new FormControl(\"\", Validators.required),\n        'corCabelo': new FormControl(\"\"),\n        'foto': new FormControl(\"\"),\n        'idade': new FormControl(0),\n        'salario': new FormControl(\"\", [Validators.required, Validators.min(0)]),\n        'telefone': new FormControl(\"\"),\n        'endereco': new FormControl(\"\", Validators.required)\n      });\n    }\n    fillFormCadastro() {\n      return new FormGroup({\n        'id': new FormControl(this.employeeToEdit.id),\n        'nome': new FormControl(this.employeeToEdit.nome, Validators.required),\n        'sobrenome': new FormControl(this.employeeToEdit.sobrenome),\n        'genero': new FormControl(this.employeeToEdit.genero, Validators.required),\n        'corCabelo': new FormControl(this.employeeToEdit.corCabelo),\n        'foto': new FormControl(this.employeeToEdit.foto),\n        'idade': new FormControl(this.employeeToEdit.idade),\n        'salario': new FormControl(this.employeeToEdit.salario, [Validators.required, Validators.min(0)]),\n        'telefone': new FormControl(this.employeeToEdit.telefone),\n        'endereco': new FormControl(this.employeeToEdit.endereco, Validators.required)\n      });\n    }\n    closeForm() {\n      this.closeCadastroForm.emit(true);\n    }\n    submit() {\n      const employeesDatabaseRef = firebaseDatabase.ref(this._database, 'empregados');\n      if (this.actionToPerform === \"Salvar\") {\n        const id = btoa(`${this.formCadastro.value.nome}${this.formCadastro.value.sobrenome}`);\n        this.formCadastro.value.id = id;\n        this.formCadastro.value.salario = `R$ ${this.formCadastro.value.salario}`;\n        try {\n          firebaseDatabase.push(employeesDatabaseRef, this.formCadastro.value);\n          Swal.fire({\n            title: 'Sucesso üòç',\n            text: \"Empregado cadastrado com sucesso!\",\n            icon: 'success'\n          });\n        } catch (error) {\n          Swal.fire({\n            title: 'Ah que pena! :(',\n            text: \"N√£o foi poss√≠vel cadastrar o empregado!\",\n            icon: 'error'\n          });\n        }\n      } else if (this.actionToPerform === \"Atualizar\") {\n        this.formCadastro.value.salario = `R$ ${this.formCadastro.value.salario}`;\n        try {\n          const employeeRef = firebaseDatabase.ref(this._database, `empregados/${this.keyToUpdate}`);\n          firebaseDatabase.update(employeeRef, this.formCadastro.value);\n          this.closeCadastroForm.emit(true);\n          Swal.fire({\n            title: 'Sucesso üòç',\n            text: \"Empregado atualizado com sucesso!\",\n            icon: 'success'\n          });\n        } catch (error) {\n          Swal.fire({\n            title: 'Ah que pena! :(',\n            text: \"N√£o foi poss√≠vel atualizar o empregado!\",\n            icon: 'error'\n          });\n        }\n      }\n      this.limparForm();\n    }\n    limparForm() {\n      this.formCadastro.reset();\n    }\n  }\n  _class = CadastroEmployeesComponent;\n  _class.…µfac = function CadastroEmployeesComponent_Factory(t) {\n    return new (t || _class)(i0.…µ…µdirectiveInject(i1.Database));\n  };\n  _class.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n    type: _class,\n    selectors: [[\"app-cadastroEmployees\"]],\n    inputs: {\n      employeeToEdit: \"employeeToEdit\",\n      keyToUpdate: \"keyToUpdate\",\n      actionToPerform: \"actionToPerform\"\n    },\n    outputs: {\n      closeCadastroForm: \"closeCadastroForm\"\n    },\n    standalone: true,\n    features: [i0.…µ…µStandaloneFeature],\n    decls: 61,\n    vars: 3,\n    consts: [[1, \"cadastro\", \"col-12\"], [\"class\", \"cadastro-header d-flex justify-content-end\", 4, \"ngIf\"], [1, \"col-12\", \"text-center\"], [1, \"d-flex\", \"justify-content-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-row\"], [1, \"row\", \"d-flex\", \"justify-content-between\"], [\"hidden\", \"\", 1, \"form-group\", \"col-md-4\"], [\"for\", \"inputId4\"], [\"type\", \"text\", \"id\", \"inputId4\", \"placeholder\", \"Id\", \"formControlName\", \"id\", 1, \"form-control\"], [1, \"form-group\", \"col-md-4\"], [\"for\", \"inputCorCabelo4\"], [\"type\", \"text\", \"id\", \"inputCorCabelo4\", \"placeholder\", \"CorCabelo\", \"formControlName\", \"corCabelo\", 1, \"form-control\"], [1, \"row\", \"d-flex\"], [\"for\", \"inputNome4\"], [\"type\", \"text\", \"id\", \"inputNome4\", \"placeholder\", \"Nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [1, \"form-group\", \"col-md-8\"], [\"for\", \"inputSobrenome2\"], [\"type\", \"text\", \"id\", \"inputSobrenome2\", \"placeholder\", \"Sobrenome\", \"formControlName\", \"sobrenome\", 1, \"form-control\"], [1, \"row\"], [1, \"form-group\", \"col-md-12\"], [\"for\", \"inputFoto2\"], [\"type\", \"text\", \"id\", \"inputFoto2\", \"placeholder\", \"Foto\", \"formControlName\", \"foto\", 1, \"form-control\"], [1, \"form-group\"], [\"for\", \"inputAddress\"], [\"type\", \"text\", \"id\", \"inputAddress\", \"placeholder\", \"1234 Main St\", \"formControlName\", \"endereco\", 1, \"form-control\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"inputPhone\"], [\"type\", \"text\", \"id\", \"inputPhone\", \"formControlName\", \"telefone\", 1, \"form-control\"], [1, \"form-row\", \"d-flex\", \"justify-content-between\"], [1, \"form-group\", \"col-md-2\"], [\"for\", \"inputIdade\"], [\"type\", \"number\", \"id\", \"inputIdade\", \"formControlName\", \"idade\", 1, \"form-control\"], [\"for\", \"inputSalario\"], [\"type\", \"text\", \"id\", \"inputSalario\", \"formControlName\", \"salario\", 1, \"form-control\"], [\"for\", \"inputGenero\"], [\"id\", \"inputGenero\", \"formControlName\", \"genero\", 1, \"form-control\"], [\"selected\", \"\"], [\"value\", \"male\"], [\"value\", \"female\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"col-4\", \"mt-3\"], [1, \"cadastro-header\", \"d-flex\", \"justify-content-end\"], [\"data-toggle\", \"tooltip\", \"data-placement\", \"top\", 3, \"title\", \"icon\", \"click\"]],\n    template: function CadastroEmployeesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µelementStart(0, \"section\", 0);\n        i0.…µ…µtemplate(1, CadastroEmployeesComponent_div_1_Template, 2, 2, \"div\", 1);\n        i0.…µ…µelementStart(2, \"h3\", 2);\n        i0.…µ…µtext(3, \"Cadastro de Empregados\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(4, \"hr\");\n        i0.…µ…µelementStart(5, \"div\", 3)(6, \"form\", 4);\n        i0.…µ…µlistener(\"ngSubmit\", function CadastroEmployeesComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.submit();\n        });\n        i0.…µ…µelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"div\", 7)(10, \"label\", 8);\n        i0.…µ…µtext(11, \"Id\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(12, \"input\", 9);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(13, \"div\", 10)(14, \"label\", 11);\n        i0.…µ…µtext(15, \"Cor do Cabelo\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(16, \"input\", 12);\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(17, \"div\", 13)(18, \"div\", 10)(19, \"label\", 14);\n        i0.…µ…µtext(20, \"Nome\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(21, \"input\", 15);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(22, \"div\", 16)(23, \"label\", 17);\n        i0.…µ…µtext(24, \"Sobrenome 2\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(25, \"input\", 18);\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(26, \"div\", 19)(27, \"div\", 20)(28, \"label\", 21);\n        i0.…µ…µtext(29, \"Link da Foto\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(30, \"input\", 22);\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelementStart(31, \"div\", 23)(32, \"label\", 24);\n        i0.…µ…µtext(33, \"Address\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(34, \"input\", 25);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(35, \"div\", 26)(36, \"label\", 27);\n        i0.…µ…µtext(37, \"Telefone\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(38, \"input\", 28);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(39, \"div\", 29)(40, \"div\", 30)(41, \"label\", 31);\n        i0.…µ…µtext(42, \"Idade\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(43, \"input\", 32);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(44, \"div\", 10)(45, \"label\", 33);\n        i0.…µ…µtext(46, \"Sal\\u00E1rio\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(47, \"input\", 34);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(48, \"div\", 10)(49, \"label\", 35);\n        i0.…µ…µtext(50, \"G\\u00EAnero\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(51, \"select\", 36)(52, \"option\", 37);\n        i0.…µ…µtext(53, \"Selecione...\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(54, \"option\", 38);\n        i0.…µ…µtext(55, \"Masculino\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(56, \"option\", 39);\n        i0.…µ…µtext(57, \"Feminino\");\n        i0.…µ…µelementEnd()()()();\n        i0.…µ…µelementStart(58, \"div\", 19)(59, \"button\", 40);\n        i0.…µ…µtext(60);\n        i0.…µ…µelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.…µ…µadvance(1);\n        i0.…µ…µproperty(\"ngIf\", ctx.actionToPerform === \"Atualizar\");\n        i0.…µ…µadvance(5);\n        i0.…µ…µproperty(\"formGroup\", ctx.formCadastro);\n        i0.…µ…µadvance(54);\n        i0.…µ…µtextInterpolate(ctx.actionToPerform);\n      }\n    },\n    dependencies: [ReactiveFormsModule, i2.…µNgNoValidate, i2.NgSelectOption, i2.…µNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, CommonModule, i3.NgIf, FontAwesomeModule, i4.FaIconComponent],\n    styles: [\".cadastro[_ngcontent-%COMP%]{background-color:#fff;padding:3rem;border-radius:4px;margin-top:3rem}fa-icon[_ngcontent-%COMP%]{color:#c71111;font-size:1.5rem}fa-icon[_ngcontent-%COMP%]:hover{color:red;cursor:pointer}\"]\n  });\n  return CadastroEmployeesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}